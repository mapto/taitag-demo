

entity Document {
	id String required,
    georgianDate Date,
    type DocumentType,
    incipit String,
    transcription String,
    collection String,
    folder String,
    folderN String,
    shelfMark String,
    publication String,
    
    
}

entity Person {
	name String,
    latinName String,
    aka String,
    birth Integer,
    death Integer,
    affiliation String
}

entity Place {
	city String required,
    italianName String
}

enum DocumentType {
	ResearchNotes, Letter, Image
}

enum Archive {
	BNF, BNCF, UBL, Other
}

enum Fields {
	Pneumatics, Travel, Astronomy, Optics
}

relationship ManyToOne {
	Document to Person{author}
}

relationship ManyToMany {
	Document to Person{recipient},
    Document to Person{quoted},
    Document to Field
}

relationship ManyToOne {
	Document to Place{placeIn},
    Document to Place{placeOut}
}

//entity Region {
//	regionName String
//}

//entity Country {
//	countryName String
//}

// an ignored comment
/** not an ignored comment */
//entity Location {
//	streetAddress String,
//	postalCode String,
//	city String,
//	stateProvince String
//}

//entity Department {
//	departmentName String required
//}

/**
 * Task entity.
 * @author The JHipster team.
 */
//entity Task {
//	title String,
//	description String
//}

/**
 * The Employee entity.
 */
//entity Employee {
//	/**
//	* The firstname attribute.
//	*/
//	firstName String,
//	lastName String,
//	email String,
//	phoneNumber String,
//	hireDate Instant,
//	salary Long,
//	commissionPct Long
//}

//entity Job {
//	jobTitle String,
//	minSalary Long,
//	maxSalary Long
//}

//entity JobHistory {
//	startDate Instant,
//	endDate Instant,
//	language Language
//}

//enum Language {
//    FRENCH, ENGLISH, SPANISH
//}

//relationship OneToOne {
//	Country{region} to Region
//}

//relationship OneToOne {
//	Location{country} to Country
//}

//relationship OneToOne {
//	Department{location} to Location
//}

//relationship ManyToMany {
//	Job{task(title)} to Task{job}
//}

// defining multiple OneToMany relationships with comments
//relationship OneToMany {
//	Employee to Job{employee},
//	/**
//	* A relationship
//	*/
//	Department to
//	/**
//	* Another side of the same relationship
//	*/
//	Employee{department}
//}

//relationship ManyToOne {
//	Employee{manager} to Employee
//}

// defining multiple oneToOne relationships

//relationship OneToOne {
//	JobHistory{job} to Job,
//	JobHistory{department} to Department,
//	JobHistory{employee} to Employee
//}

// Set pagination options
paginate Document with infinite-scroll
// paginate Job with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
// service all with serviceImpl except Employee, Job
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
